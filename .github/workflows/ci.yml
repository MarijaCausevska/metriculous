name: CI

on: [push, pull_request]

jobs:

  Tests:
    name: ${{ matrix.os }} / py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Install poetry
        shell: bash
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py >> get-poetry.py
          python get-poetry.py -y
          echo "::set-env name=PATH::$HOME/.poetry/bin:$PATH"

      - name: Configure poetry
        shell: bash
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
        shell: bash
        run: poetry run pip --version >/dev/null 2>&1 || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run `make check`
        shell: bash
        run: make check

      - name: Run `make test`
        shell: bash
        run: make test

  Pip-Install-Commit:
    name: pip-install-commit / ${{ matrix.os }} / py${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.7, 3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Delete src
        shell: bash
        run: rm -rf src

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: which pip
        shell: bash
        run: which pip

      - name: pip install this commit
        shell: bash
        run: pip install git+https://github.com/metriculous-ml/metriculous@${{ github.sha }}

      - name: run quickstart_classification.py
        shell: bash
        run: python notebooks/quickstart_classification.py

      - name: run quickstart_regression.py
        shell: bash
        run: python notebooks/quickstart_regression.py
